{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/ogyeonghwan/Documents/react-nodebird/prepare/front/components/PostCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Card, Popover, Button, Avatar } from 'antd';\nimport { EllipsisOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, RetweetOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PostImages from './PostImages';\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 19\n      }\n    }) : __jsx(HeartOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 38\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(PostCard, \"UJTMhLIj71iGmUx6kccUc939lXM=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comment: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","useState","Card","Popover","Button","Avatar","EllipsisOutlined","HeartOutlined","HeartTwoTone","MessageOutlined","RetweetOutlined","useSelector","PropTypes","PostImages","PostCard","post","id","state","user","me","liked","setLiked","commentFormOpened","setCommentFormOpened","marginBottom","Images","User","nickname","content","propTypes","shape","number","object","string","createdAt","Comment","arrayOf","isRequired"],"sources":["/Users/ogyeonghwan/Documents/react-nodebird/prepare/front/components/PostCard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, Popover, Button, Avatar } from 'antd';\nimport {\n  EllipsisOutlined,\n  HeartOutlined,\n  HeartTwoTone,\n  MessageOutlined,\n  RetweetOutlined,\n} from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PostImages from './PostImages';\n\nconst PostCard = ({ post }) => {\n  const id = useSelector((state) => state.user.me?.id);\n  const [liked, setLiked] = useState(false);\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n\n  return (\n    <div style={{ marginBottom: 20 }}>\n      <Card\n        cover={post.Images[0] && <PostImages images={post.Images} />}\n        actions={[\n          <RetweetOutlined key=\"retweet\" />,\n          liked ? <HeartTwoTone /> : <HeartOutlined />,\n          <MessageOutlined key=\"comment\" />,\n          <Popover\n            key=\"more\"\n            content={\n              <Button.Group>\n                {id && post.User.id === id ? (\n                  <>\n                    <Button>수정</Button>\n                    <Button type=\"danger\">삭제</Button>\n                  </>\n                ) : (\n                  <Button>신고</Button>\n                )}\n              </Button.Group>\n            }\n          >\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n      >\n        <Card.Meta\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n          description={post.content}\n        />\n      </Card>\n      {/* <CommentForm />\n      <Comments /> */}\n    </div>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comment: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default PostCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}