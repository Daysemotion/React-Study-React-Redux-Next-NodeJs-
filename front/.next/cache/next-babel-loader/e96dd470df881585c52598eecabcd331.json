{"ast":null,"code":"import next from 'next';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { legacy_createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport ThunkMiddleware from 'redux-thunk';\nimport reducer from '../reducers';\n\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  console.log(action);\n  return next(action);\n};\n\nconst configureStore = () => {\n  const middlewares = [ThunkMiddleware, loggerMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = legacy_createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["next","createWrapper","legacy_createStore","applyMiddleware","compose","composeWithDevTools","ThunkMiddleware","reducer","loggerMiddleware","dispatch","getState","action","console","log","configureStore","middlewares","enhancer","store","wrapper","debug"],"sources":["/Users/ogyeonghwan/Documents/react-nodebird/prepare/front/store/configureStore.js"],"sourcesContent":["import next from 'next';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { legacy_createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport ThunkMiddleware from 'redux-thunk';\nimport reducer from '../reducers';\n\nconst loggerMiddleware =\n  ({ dispatch, getState }) =>\n  (next) =>\n  (action) => {\n    console.log(action);\n    return next(action);\n  };\n\nconst configureStore = () => {\n  const middlewares = [ThunkMiddleware, loggerMiddleware];\n  const enhancer =\n    process.env.NODE_ENV === 'producttion'\n      ? compose(applyMiddleware(...middlewares))\n      : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = legacy_createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE_ENV === 'development',\n});\n\nexport default wrapper;\n"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,kBAAT,EAA6BC,eAA7B,EAA8CC,OAA9C,QAA6D,OAA7D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,gBAAgB,GACpB,CAAC;EAAEC,QAAF;EAAYC;AAAZ,CAAD,KACCV,IAAD,IACCW,MAAD,IAAY;EACVC,OAAO,CAACC,GAAR,CAAYF,MAAZ;EACA,OAAOX,IAAI,CAACW,MAAD,CAAX;AACD,CANH;;AAQA,MAAMG,cAAc,GAAG,MAAM;EAC3B,MAAMC,WAAW,GAAG,CAACT,eAAD,EAAkBE,gBAAlB,CAApB;EACA,MAAMQ,QAAQ,GACZ,QACIZ,OAAO,CAACD,eAAe,CAAC,GAAGY,WAAJ,CAAhB,CADX,GAEIV,mBAAmB,CAACF,eAAe,CAAC,GAAGY,WAAJ,CAAhB,CAHzB;EAIA,MAAME,KAAK,GAAGf,kBAAkB,CAACK,OAAD,EAAUS,QAAV,CAAhC;EACA,OAAOC,KAAP;AACD,CARD;;AAUA,MAAMC,OAAO,GAAGjB,aAAa,CAACa,cAAD,EAAiB;EAC5CK,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}