{"ast":null,"code":"var _jsxFileName = \"/Users/ogyeonghwan/Documents/react-nodebird/prepare/front/components/PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Card, Popover, Button, Avatar } from 'antd';\nimport { EllipsisOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, RetweetOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PostImages from './PostImages';\n\nconst PostCard = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      key: \"heart\",\n      twoToneColor: \"#eb2f96\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }) : __jsx(HeartOutlined, {\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comment: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"names":["React","useState","useCallback","Card","Popover","Button","Avatar","EllipsisOutlined","HeartOutlined","HeartTwoTone","MessageOutlined","RetweetOutlined","useSelector","PropTypes","PostImages","PostCard","post","id","state","user","me","liked","setLiked","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","marginBottom","Images","User","nickname","content","propTypes","shape","number","object","string","createdAt","Comment","arrayOf","isRequired"],"sources":["/Users/ogyeonghwan/Documents/react-nodebird/prepare/front/components/PostCard.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Card, Popover, Button, Avatar } from 'antd';\nimport {\n  EllipsisOutlined,\n  HeartOutlined,\n  HeartTwoTone,\n  MessageOutlined,\n  RetweetOutlined,\n} from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PostImages from './PostImages';\n\nconst PostCard = ({ post }) => {\n  const id = useSelector((state) => state.user.me?.id);\n  const [liked, setLiked] = useState(false);\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked((prev) => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened((prev) => !prev);\n  }, []);\n\n  return (\n    <div style={{ marginBottom: 20 }}>\n      <Card\n        cover={post.Images[0] && <PostImages images={post.Images} />}\n        actions={[\n          <RetweetOutlined key=\"retweet\" />,\n          liked ? (\n            <HeartTwoTone\n              key=\"heart\"\n              twoToneColor=\"#eb2f96\"\n              onClick={onToggleLike}\n            />\n          ) : (\n            <HeartOutlined onClick={onToggleLike} />\n          ),\n          <MessageOutlined key=\"comment\" />,\n          <Popover\n            key=\"more\"\n            content={\n              <Button.Group>\n                {id && post.User.id === id ? (\n                  <>\n                    <Button>수정</Button>\n                    <Button type=\"danger\">삭제</Button>\n                  </>\n                ) : (\n                  <Button>신고</Button>\n                )}\n              </Button.Group>\n            }\n          >\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n      >\n        <Card.Meta\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n          description={post.content}\n        />\n      </Card>\n      {/* <CommentForm />\n      <Comments /> */}\n    </div>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comment: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default PostCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}